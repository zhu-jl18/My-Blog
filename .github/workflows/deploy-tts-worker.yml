name: Deploy TTS Worker

on:
  workflow_dispatch:
    inputs:
      set_secrets:
        description: 'Put GEMINI_* secrets to Cloudflare (overwrite existing)'
        required: false
        default: 'false'
  push:
    paths:
      - "cloudflare-worker/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Wrangler v4
        run: npm i -g wrangler@4

      - name: Set Secrets (optional, only when manually requested)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.set_secrets == 'true' && (secrets.GEMINI_API_KEYS_JSON != '' || secrets.GEMINI_API_KEYS != '' || secrets.GEMINI_API_KEY != '') }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GEMINI_API_KEYS_JSON: ${{ secrets.GEMINI_API_KEYS_JSON }}
          GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          set -e
          if [ -n "${GEMINI_API_KEYS_JSON}" ]; then
            echo "Setting GEMINI_API_KEYS_JSON"
            echo -n "$GEMINI_API_KEYS_JSON" | wrangler secret put GEMINI_API_KEYS_JSON --config cloudflare-worker/wrangler-tts.toml
          fi
          if [ -n "${GEMINI_API_KEYS}" ]; then
            echo "Setting GEMINI_API_KEYS"
            echo -n "$GEMINI_API_KEYS" | wrangler secret put GEMINI_API_KEYS --config cloudflare-worker/wrangler-tts.toml
          fi
          if [ -n "${GEMINI_API_KEY}" ]; then
            echo "Setting GEMINI_API_KEY"
            echo -n "$GEMINI_API_KEY" | wrangler secret put GEMINI_API_KEY --config cloudflare-worker/wrangler-tts.toml
          fi

      - name: Check Cloudflare token
        run: |
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "Missing CLOUDFLARE_API_TOKEN GitHub secret. Create a token with Workers Scripts:Edit and R2:Edit permissions, then set it at Settings → Secrets and variables → Actions." >&2
            exit 1
          fi

      - name: Deploy Worker (wrangler)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler deploy --config cloudflare-worker/wrangler-tts.toml
