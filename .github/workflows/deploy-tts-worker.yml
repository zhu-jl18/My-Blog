name: Deploy TTS Worker

on:
  workflow_dispatch: {}
  push:
    paths:
      - "cloudflare-worker/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Wrangler
        run: npm i -g wrangler@3

      - name: Set Secrets (optional, first-time or rotation)
        if: ${{ env.GEMINI_API_KEYS_JSON != '' || env.GEMINI_API_KEYS != '' || env.GEMINI_API_KEY != '' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GEMINI_API_KEYS_JSON: ${{ secrets.GEMINI_API_KEYS_JSON }}
          GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          set -e
          if [ -n "${GEMINI_API_KEYS_JSON}" ]; then
            echo "Setting GEMINI_API_KEYS_JSON"
            echo -n "$GEMINI_API_KEYS_JSON" | wrangler secret put GEMINI_API_KEYS_JSON --config cloudflare-worker/wrangler-tts.toml --quiet
          fi
          if [ -n "${GEMINI_API_KEYS}" ]; then
            echo "Setting GEMINI_API_KEYS"
            echo -n "$GEMINI_API_KEYS" | wrangler secret put GEMINI_API_KEYS --config cloudflare-worker/wrangler-tts.toml --quiet
          fi
          if [ -n "${GEMINI_API_KEY}" ]; then
            echo "Setting GEMINI_API_KEY"
            echo -n "$GEMINI_API_KEY" | wrangler secret put GEMINI_API_KEY --config cloudflare-worker/wrangler-tts.toml --quiet
          fi

      - name: Deploy Worker (wrangler)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          wrangler deploy --config cloudflare-worker/wrangler-tts.toml
